version: '3'
services:
  rest-api:
    build:
      context: .
      dockerfile: Dockerfile-prod
    depends_on:
      - mongodb
    hostname: rest-api
    networks:
      - web
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=3000
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017

  mongodb:
    image: "mongo:latest"
    hostname: mongodb
    networks:
      - web

  nginx:
    image: "nginx:stable-alpine"
    ports:
      - "8080:80"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    depends_on:
      - rest-api
    networks:
      - web

  testing-environment:
    build:
      context: .
      dockerfile: Dockerfile-test
    depends_on:
      - mongodb
    hostname: testing-environment
    command:
      - /bin/sh
      - -c
      - |
          echo -e "\e[1;34mrunning 'pytest' with configs in '.coveragerc' file ...\e[0m" && \
                  py.test \
                      -vvs \
                      --cov . tests \
                      --cov-report term-missing \
                      --cov-report html:cov_html \
                      --cov-report xml:cov.xml \
                      --cov-config .coveragerc && \
                  echo -e "\e[1;34mcleaning directory ...\e[0m" && \
                  rm -r ./.pytest_cache/ 2> /dev/null && \
                  rm ./.coverage 2> /dev/null
    networks:
      - web

networks:
  web:
    driver: bridge